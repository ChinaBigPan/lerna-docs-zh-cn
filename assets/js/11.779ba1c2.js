(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{353:function(e,r,s){"use strict";s.r(r);var t=s(43),a=Object(t.a)({},(function(){var e=this,r=e.$createElement,s=e._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"lerna-global-options"}},[s("code",[e._v("@lerna/global-options")])]),e._v(" "),s("blockquote",[s("p",[e._v("适用于每个 lerna 子命令的全局配置项")])]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/lerna/lerna/blob/master/core/global-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("英文原地址"),s("OutboundLink")],1)]),e._v(" "),s("h2",{attrs:{id:"配置项"}},[e._v("配置项")]),e._v(" "),s("p",[e._v("当 Lerna 将任务并行执行时，需要使用多少线程(默认为逻辑 CPU 内核数)。")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("lerna publish --concurrency "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"loglevel-silent-error-warn-success-info-verbose-silly"}},[s("code",[e._v("--loglevel <silent|error|warn|success|info|verbose|silly>")])]),e._v(" "),s("p",[e._v("要报告什么级别的日志。如果失败，所有日志都写到当前工作目录中的 lerna-debug.log 中。")]),e._v(" "),s("p",[e._v("任何高于该设置的日志都会显示出来。默认值是“info”。")]),e._v(" "),s("h3",{attrs:{id:"max-buffer-bytes"}},[s("code",[e._v("--max-buffer <bytes>")])]),e._v(" "),s("p",[e._v("为每个底层进程调用设置的最大缓冲区长度。例如，当有人希望在运行"),s("code",[e._v("lerna import")]),e._v("的同时导入包含大量提交的仓库时，就是它出场的时候了。在这种情况下，内置的缓冲区长度可能不够。")]),e._v(" "),s("h3",{attrs:{id:"no-progress"}},[s("code",[e._v("--no-progress")])]),e._v(" "),s("p",[e._v("禁用进度条。在 CI 环境中总是这样。")]),e._v(" "),s("h3",{attrs:{id:"no-sort"}},[s("code",[e._v("--no-sort")])]),e._v(" "),s("p",[e._v("默认情况下，所有任务都按照拓扑排序的顺序在包上执行，以尊重所讨论的包的依赖关系。在不保证 Lerna 调用一致的情况下，以最努力的方式打破循环。")]),e._v(" "),s("p",[e._v("如果只有少量的包邮许多依赖项，或者某些包执行的时间长得不成比例，拓扑排序可能会导致并发瓶颈。"),s("code",[e._v("--no-sort")]),e._v("配置项禁用排序，而是以最大并发的任意顺序执行任务。")]),e._v(" "),s("p",[e._v("如果您运行多个"),s("code",[e._v("watch")]),e._v("命令，该配置项也会有所帮助。因为"),s("code",[e._v("lerna run")]),e._v('将按照拓扑排序的顺序执行命令，所以在继续执行之前可能会等待某个命令。当您运行"watch"命令时会阻塞执行，因为他们通常不会结束。这里有一个'),s("code",[e._v("watch")]),e._v("命令运行"),s("code",[e._v("babel")]),e._v("的"),s("a",{attrs:{href:"https://babeljs.io/docs/usage/cli/#babel-compile-files",target:"_blank",rel:"noopener noreferrer"}},[e._v("示例"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"reject-cycles"}},[s("code",[e._v("--reject-cycles")])]),e._v(" "),s("p",[e._v("如果(在"),s("code",[e._v("bootstrap")]),e._v("、"),s("code",[e._v("exec")]),e._v("、"),s("code",[e._v("publish")]),e._v("或"),s("code",[e._v("run")]),e._v("中)发现循环，则立即失败。")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("lerna bootstrap --reject-cycles\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])])])}),[],!1,null,null,null);r.default=a.exports}}]);