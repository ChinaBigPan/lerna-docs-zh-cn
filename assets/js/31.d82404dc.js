(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{375:function(e,s,n){"use strict";n.r(s);var a=n(43),t=Object(a.a)({},(function(){var e=this,s=e.$createElement,n=e._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"lerna-version"}},[n("code",[e._v("@lerna/version")])]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/lerna/lerna/tree/master/commands/version#lernaversion",target:"_blank",rel:"noopener noreferrer"}},[e._v("英文原地址"),n("OutboundLink")],1)]),e._v(" "),n("blockquote",[n("p",[e._v("更改自上次发布以来的包版本号。")])]),e._v(" "),n("h2",{attrs:{id:"使用"}},[e._v("使用")]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[e._v("lerna version "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.0")]),e._v(".1 "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 显式指定")]),e._v("\nlerna version patch "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 语义化关键字")]),e._v("\nlerna version       "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 根据提示选择")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("在运行时，该命令执行以下操作:")]),e._v(" "),n("ol",[n("li",[e._v("标识自上一个版本以来更新的包。")]),e._v(" "),n("li",[e._v("提示输入新版本。")]),e._v(" "),n("li",[e._v("修改包的元数据，在根目录和每个包当中运行适当的生命周期脚本。")]),e._v(" "),n("li",[e._v("提交这些更改并打上标记。")]),e._v(" "),n("li",[e._v("推动到 git 远程服务器。")])]),e._v(" "),n("h2",{attrs:{id:"位置"}},[e._v("位置")]),e._v(" "),n("h3",{attrs:{id:"语义化版本号"}},[e._v("语义化版本号")]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[e._v("lerna version "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("major "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" minor "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" patch "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" premajor "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" preminor "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" prepatch "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" prerelease"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 使用下一个语义化版本号，然后跳过“为…选择一个新版本”的提示。")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("当传递位置参数时，"),n("code",[e._v("lerna version")]),e._v("将跳过版本选择的提示问题并根据关键字"),n("a",{attrs:{href:"https://github.com/npm/node-semver#functions",target:"_blank",rel:"noopener noreferrer"}},[e._v("增加"),n("OutboundLink")],1),e._v("版本号。当然仍然需要使用"),n("code",[e._v("--yes")]),e._v("来避免所有的问题。")]),e._v(" "),n("h2",{attrs:{id:"预发布"}},[e._v("预发布")]),e._v(" "),n("p",[e._v("如果你有一个预发布版本号的软件包(例如"),n("code",[e._v("2.0.0-beta.3")]),e._v(")，并且你运行了"),n("code",[e._v("lerna version")]),e._v("和一个非预先发布的版本("),n("code",[e._v("major")]),e._v("、"),n("code",[e._v("minor")]),e._v("或"),n("code",[e._v("patch")]),e._v(")，它将会发布那些之前发布的软件包以及自上次发布以来已经改变的软件包。")]),e._v(" "),n("p",[e._v("对于使用常规提交的项目，使用以下标志进行预发行管理：")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://github.com/lerna/lerna/tree/master/commands/version#--conventional-prerelease",target:"_blank",rel:"noopener noreferrer"}},[e._v("--conventional-prerelease"),n("OutboundLink")],1),e._v(": 将当前更改作为预发行版本发布。")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/lerna/lerna/tree/master/commands/version#--conventional-graduate",target:"_blank",rel:"noopener noreferrer"}},[e._v("--conventional-graduate"),n("OutboundLink")],1),e._v(": 将预发布版本的包升级为稳定版本。")])]),e._v(" "),n("p",[e._v("如果不使用上面的参数运行"),n("code",[e._v("lerna version --conventional-commits")]),e._v("，则只有在版本已经在"),n("code",[e._v("prerelease")]),e._v("中时，才会将当前更改作为"),n("code",[e._v("prerelease")]),e._v("释放。")]),e._v(" "),n("h2",{attrs:{id:"配置项"}},[e._v("配置项")]),e._v(" "),n("h3",{attrs:{id:"allow-branch-glob"}},[n("code",[e._v("--allow-branch <glob>")])]),e._v(" "),n("p",[e._v("匹配启用了"),n("code",[e._v("lerna version")]),e._v("的 git 分支的白名单。在"),n("code",[e._v("lerna.json")]),e._v("中配置它是最简单的(我们也这么推荐)，但是也可以将它作为 CLI 配置项传入进去。")]),e._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"command"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"allowBranch"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"master"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br")])]),n("p",[e._v("使用上面的配置，"),n("code",[e._v("lerna version")]),e._v("在除"),n("code",[e._v("master")]),e._v("之外的任何分支运行时都将失败。最佳实践是将"),n("code",[e._v("lerna version")]),e._v("限制到主分支。")]),e._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"command"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"allowBranch"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"master"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"feature/*"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br")])]),n("p",[e._v("在上面的配置中，"),n("code",[e._v("lerna version")]),e._v("将被允许出现在任何以"),n("code",[e._v("feature/")]),e._v("为前缀的分支中。请注意，在 feature 分支中生成 git 标签会产生潜在的错误，因为这些分支会被合并到主分支中。如果标签和其原始上下文“分离”开来(可能通过"),n("code",[e._v("squash merge")]),e._v("或"),n("code",[e._v("conflicted merge")]),e._v("提交)，那么未来的"),n("code",[e._v("lerna version")]),e._v("执行将很难确定正确的“自上一个版本以来的差异”。")]),e._v(" "),n("p",[e._v("使用命令行会覆盖这个“持久”的配置，请谨慎使用。")]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[e._v("lerna version --allow-branch hotfix/oops-fix-the-thing\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("h3",{attrs:{id:"amend"}},[n("code",[e._v("--amend")])]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[e._v("lerna version --amend\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 保留 commit 的消息，并跳过 git push")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("当使用该参数运行时，"),n("code",[e._v("lerna version")]),e._v("将对当前提交执行所有更改，而不是添加一个新的。这在"),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Continuous_integration",target:"_blank",rel:"noopener noreferrer"}},[e._v("持续集成(CI)"),n("OutboundLink")],1),e._v("期间非常有用，可以减少项目历史记录中的提交数量。")]),e._v(" "),n("p",[e._v("为了防止意外的覆盖，这个命令将跳过"),n("code",[e._v("git push")]),e._v("(也就是说"),n("code",[e._v("--no-push")]),e._v(")。")]),e._v(" "),n("h3",{attrs:{id:"changelog-preset"}},[n("code",[e._v("--changelog-preset")])]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[e._v("lerna version --conventional-commits --changelog-preset angular-bitbucket\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("默认情况下，changelog 预设值是"),n("a",{attrs:{href:"https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular#angular-convention",target:"_blank",rel:"noopener noreferrer"}},[e._v("angular"),n("OutboundLink")],1),e._v("。在某些情况下，您可能需要使用另一个预设值或自定义一个。")]),e._v(" "),n("p",[e._v("预设值是常规更改日志的内置或可安装配置的名称。预设值可以作为包的全名或自动扩展的后缀进行传递(举个例子，"),n("code",[e._v("angular")]),e._v("扩展为"),n("code",[e._v("conventional-changelog-angular")]),e._v(")。")]),e._v(" "),n("h3",{attrs:{id:"conventional-commits"}},[n("code",[e._v("--conventional-commits")])]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[e._v("lerna version --conventional-commits\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("当您使用这个参数运行时，"),n("code",[e._v("lerna version")]),e._v("将使用"),n("a",{attrs:{href:"https://conventionalcommits.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("传统的提交规范"),n("OutboundLink")],1),e._v("来"),n("a",{attrs:{href:"https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-recommended-bump",target:"_blank",rel:"noopener noreferrer"}},[e._v("确定版本"),n("OutboundLink")],1),e._v("并"),n("a",{attrs:{href:"https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli",target:"_blank",rel:"noopener noreferrer"}},[e._v("生成 CHANGELOG.md 文件"),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("p",[e._v("传入"),n("a",{attrs:{href:"https://github.com/lerna/lerna/tree/master/commands/version#--no-changelog",target:"_blank",rel:"noopener noreferrer"}},[e._v("--no-changelog"),n("OutboundLink")],1),e._v("将阻止生成(或更新)"),n("code",[e._v("CHANGELOG.md")]),e._v("文件。")]),e._v(" "),n("h3",{attrs:{id:"conventional-graduate"}},[n("code",[e._v("--conventional-graduate")])]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[e._v("lerna version --conventional-commits --conventional-graduate"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("package-2,package-4\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 强制分隔所有的预发行包")]),e._v("\nlerna version --conventional-commits --conventional-graduate\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("p",[e._v("当使用该参数时，"),n("code",[e._v("lerna version")]),e._v("将使用"),n("code",[e._v("*")]),e._v("分隔指定的包(用逗号隔开的)或所有的包。无论当前的 HEAD 是否已释放，该命令都可以工作，它和"),n("code",[e._v("--force-publish")]),e._v("相类似，除了忽略任何非预发布包。如果未指定的包(如果指定了包)或未预先发布的包发生了更改，那么这些包将按照它们通常使用的"),n("code",[e._v("--conventional-commits")]),e._v("提交的方式进行版本控制。")]),e._v(" "),n("p",[e._v("“分隔”一个软件包意味着一个预发布版本的非预发布版本变体。例如"),n("code",[e._v("package-1@1.0.0-alpha.0 => package-1@1.0.0")]),e._v("。")]),e._v(" "),n("blockquote",[n("p",[e._v("注意：当指定包时，它的依赖项将被释放，但不会被分隔。")])]),e._v(" "),n("h3",{attrs:{id:"conventional-prerelease"}},[n("code",[e._v("--conventional-prerelease")])]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[e._v("lerna version --conventional-commits --conventional-prerelease"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("package-2,package-4\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 强制所有发生改变的包变为预发布")]),e._v("\nlerna version --conventional-commits --conventional-prerelease\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("p",[e._v("当使用该参数时，"),n("code",[e._v("lerna version")]),e._v("将使用"),n("code",[e._v("*")]),e._v("分隔指定的包(用逗号隔开的)或所有的包。通过在"),n("code",[e._v("conventional-commits")]),e._v("的版本推荐之前加上"),n("code",[e._v("pre")]),e._v("，可以将所有未发布的更改作为 pre (patch/minor/major/release)版来发布。如果当前的更改包含了特性提交，那么推荐的版本将成为"),n("code",[e._v("minor")]),e._v("，因此该参数会使其成为"),n("code",[e._v("preminor")]),e._v("发布。如果未指定的包(如果指定了包)或未预先发布的包发生了更改，那么这些包将按照它们通常使用的"),n("code",[e._v("--conventional-commits")]),e._v("提交的方式进行版本控制。")]),e._v(" "),n("h3",{attrs:{id:"create-release-type"}},[n("code",[e._v("--create-release <type>")])]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[e._v("lerna version --conventional-commits --create-release github\nlerna version --conventional-commits --create-release gitlab\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("当使用该参数时，"),n("code",[e._v("lerna version")]),e._v("将基于更改的包创建一个正式的 GitHub 或 GitLab 版本。需要传递"),n("code",[e._v("conventional-commits")]),e._v("以便生成变更日志。")]),e._v(" "),n("p",[e._v("要使用 GitHub 进行身份验证，可以定义以下环境变量。")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("GH_TOKEN")]),e._v("（必须）- 您的 GitHub 认证 token (在设置(Settings) > 开发人员设置(Developer Settings) > 个人访问令牌(Personal access tokens)下)。")]),e._v(" "),n("li",[n("code",[e._v("GHE_API_URL")]),e._v(" - 当使用 GitHub Enterprise 时，API 的绝对URL。")]),e._v(" "),n("li",[n("code",[e._v("GHE_VERSION")]),e._v(" - 当使用 GitHub Enterprise 时，当前安装的 GHE 版本。"),n("a",{attrs:{href:"https://github.com/octokit/plugin-enterprise-rest.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("支持以下版本"),n("OutboundLink")],1),e._v("。")])]),e._v(" "),n("p",[e._v("要使用 GitLab 进行身份验证，可以定义以下环境变量。")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("GL_TOKEN")]),e._v("（必须）- 您的 GitLab 认证 token (在用户设置(User Settings) > 访问令牌(Access Tokens)下)。")]),e._v(" "),n("li",[n("code",[e._v("GL_API_URL")]),e._v(" - API 的绝对URL，包括版本号。(默认值：https://gitlab.com/api/v4)")])]),e._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[e._v("注意")]),e._v(" "),n("p",[e._v("当使用该配置项的时候，不要设置"),n("code",[e._v("--no-changelog")])])]),e._v(" "),n("p",[e._v("该配置项也可以在"),n("code",[e._v("lerna.json")]),e._v("中配置：")]),e._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"changelogPreset"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"angular"')]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("如果预先导出一个构件函数（如："),n("code",[e._v("conventional-changelog-conventionalcommits")]),e._v("），您也可以指定"),n("a",{attrs:{href:"https://github.com/conventional-changelog/conventional-changelog-config-spec",target:"_blank",rel:"noopener noreferrer"}},[e._v("预设配置"),n("OutboundLink")],1),e._v("：")]),e._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"changelogPreset"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"conventionalcommits"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"issueUrlFormat"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"{{host}}/{{owner}}/{{repository}}/issues/{{id}}"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br")])]),n("h3",{attrs:{id:"exact"}},[n("code",[e._v("--exact")])]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[e._v("lerna version --exact\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("当使用该参数时，"),n("code",[e._v("lerna version")]),e._v("将在更新的包中精确地指定更新过的依赖项(无标点符号)，而不做语义化版本号兼容(使用"),n("code",[e._v("^")]),e._v(")。")]),e._v(" "),n("p",[e._v("有关更多信息，请参见 package.json 文档的"),n("a",{attrs:{href:"https://docs.npmjs.com/files/package.json#dependencies",target:"_blank",rel:"noopener noreferrer"}},[e._v("依赖关系"),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("h3",{attrs:{id:"force-publish"}},[n("code",[e._v("--force-publish")])]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[e._v("lerna version --force-publish"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("package-2,package-4\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 强制所有的包标上版本")]),e._v("\nlerna version --force-publish\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("p",[e._v("当使用该参数时，"),n("code",[e._v("lerna version")]),e._v("将强制发布指定的包(逗号分隔)或使用"),n("code",[e._v("*")]),e._v("发布所有包。")]),e._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("注意")]),e._v(" "),n("p",[e._v("这将跳过以更改包的"),n("code",[e._v("lerna changed")]),e._v("检查，并强制更新没有"),n("code",[e._v("git diff")]),e._v("更改的包。")])]),e._v(" "),n("h3",{attrs:{id:"git-remote-name"}},[n("code",[e._v("--git-remote <name>")])]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[e._v("lerna version --git-remote upstream\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("当使用该参数时，"),n("code",[e._v("lerna version")]),e._v("将把 git 更改推送到指定的远程服务器，而不是"),n("code",[e._v("origin")]),e._v("。")]),e._v(" "),n("h3",{attrs:{id:"ignore-changes"}},[n("code",[e._v("--ignore-changes")])]),e._v(" "),n("p",[e._v("当检测到更改的包时，忽略由通配符匹配到的文件中的更改。")]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[e._v("lerna version --ignore-changes "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'**/*.md'")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'**/__tests__/**'")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("该配置项最好通过"),n("code",[e._v("lerna.json")]),e._v("指定，既避免过早的 shell 验证也能够和"),n("code",[e._v("lerna diff")]),e._v("及"),n("code",[e._v("lerna changed")]),e._v("共享配置：")]),e._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"ignoreChanges"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"**/__fixtures__/**"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"**/__tests__/**"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"**/*.md"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("使用"),n("code",[e._v("--no-ignore-changes")]),e._v("禁用任何现有的持久配置。")]),e._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[e._v("在下列情况下，无论该配置项如何设置，包都会发布：")]),e._v(" "),n("ol",[n("li",[e._v("该包的最新版本是"),n("code",[e._v("prerelease")]),e._v("版(即"),n("code",[e._v("1.0.0-alpha")]),e._v("，"),n("code",[e._v("1.0.0-0.3.7")]),e._v("等等)。")]),e._v(" "),n("li",[e._v("包的一个或多个相关依赖项已发生更改。")])])]),e._v(" "),n("h3",{attrs:{id:"ignore-scripts"}},[n("code",[e._v("--ignore-scripts")])]),e._v(" "),n("p",[e._v("当使用该参数时，"),n("code",[e._v("lerna version")]),e._v("会在运行期间禁用"),n("a",{attrs:{href:"https://github.com/lerna/lerna/tree/master/commands/version#lifecycle-scripts",target:"_blank",rel:"noopener noreferrer"}},[e._v("生命周期脚本"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"include-merged-tags"}},[n("code",[e._v("--include-merged-tags")])]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[e._v("lerna version --include-merged-tags\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("在检测更改的包时包含合并分支的标记。")]),e._v(" "),n("h3",{attrs:{id:"message-msg"}},[n("code",[e._v("--message <msg>")])]),e._v(" "),n("p",[e._v("可简写为"),n("code",[e._v("-m")]),e._v("，用于"),n("code",[e._v("git commit")]),e._v("。")]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[e._v("lerna version -m "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"chore(release): publish %s"')]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# commit message = "chore(release): publish v1.0.0"')]),e._v("\n\nlerna version -m "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"chore(release): publish %v"')]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# commit message = "chore(release): publish 1.0.0"')]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 当单独对包进行版本控制时，不会替换占位符")]),e._v("\nlerna version -m "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"chore(release): publish"')]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# commit message = "chore(release): publish')]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# - package-1@3.0.1")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# - package-2@1.5.4"')]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br")])]),n("p",[e._v("当使用该参数时，"),n("code",[e._v("lerna version")]),e._v("会在提交发布版本更新时使用所提供的消息。对于将 lerna 集成到期望提交消息遵守某些规则的项目中非常有用，例如使用"),n("a",{attrs:{href:"https://github.com/commitizen/cz-cli",target:"_blank",rel:"noopener noreferrer"}},[e._v("commitizen"),n("OutboundLink")],1),e._v("和/或"),n("a",{attrs:{href:"https://github.com/semantic-release/semantic-release",target:"_blank",rel:"noopener noreferrer"}},[e._v("语义化版本发布"),n("OutboundLink")],1),e._v("的项目。")]),e._v(" "),n("p",[e._v("如果消息包含"),n("code",[e._v("%s")]),e._v("，则将其替换为新的全局版本版本号，该版本号前缀为“v”。如果消息包含"),n("code",[e._v("%v")]),e._v("，它将被替换为新的全局版本版本号，但没有前缀“v”。注意，这个占位符插值只在使用默认的“固定”版本模式时使用，因为在独立版本控制时没有“全局”版本可以进行插值。")]),e._v(" "),n("p",[e._v("在"),n("code",[e._v("lerna.json")]),e._v("中这样配置：")]),e._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"command"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"message"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"chore(release): publish %s"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br")])]),n("h3",{attrs:{id:"no-changelog"}},[n("code",[e._v("--no-changelog")])]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[e._v("lerna version --conventional-commits --no-changelog\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("使用"),n("code",[e._v("--conventional-commits")]),e._v("时，不要生成任何"),n("code",[e._v("CHANGELOG.md")]),e._v("文件。")]),e._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[e._v("注意")]),e._v(" "),n("p",[e._v("当使用该配置项的时候，不要设置"),n("code",[e._v("--create-release")])])]),e._v(" "),n("h3",{attrs:{id:"no-commit-hooks"}},[n("code",[e._v("--no-commit-hooks")])]),e._v(" "),n("p",[e._v("默认情况下，"),n("code",[e._v("lerna version")]),e._v("将允许 git commit 钩子在提交版本更改时运行。通过"),n("code",[e._v("——no-commit-hook")]),e._v("来禁用此行为。")]),e._v(" "),n("p",[e._v("该配置项类似于"),n("code",[e._v("npm version")]),e._v("的"),n("a",{attrs:{href:"https://docs.npmjs.com/misc/config#commit-hooks",target:"_blank",rel:"noopener noreferrer"}},[e._v("--commit-hooks"),n("OutboundLink")],1),e._v("配置项，只是反过来了。")]),e._v(" "),n("h3",{attrs:{id:"no-git-tag-version"}},[n("code",[e._v("--no-git-tag-version")])]),e._v(" "),n("p",[e._v("默认情况下，"),n("code",[e._v("lerna version")]),e._v("将提交对 package.json 文件的更改，并标记发行版。通过"),n("code",[e._v("——no-git-tag-version")]),e._v("可以禁用该行为。")]),e._v(" "),n("p",[e._v("该配置项与"),n("code",[e._v("npm version")]),e._v("的配置项"),n("a",{attrs:{href:"https://docs.npmjs.com/misc/config#git-tag-version",target:"_blank",rel:"noopener noreferrer"}},[e._v("--git-tag-version"),n("OutboundLink")],1),e._v("相类似，只是反过来了。")]),e._v(" "),n("h3",{attrs:{id:"no-granular-pathspec"}},[n("code",[e._v("--no-granular-pathspec")])]),e._v(" "),n("p",[e._v("默认情况下，"),n("code",[e._v("lerna version")]),e._v("将在"),n("code",[e._v("git add")]),e._v("时只添加在版本控制过程中更改过的叶子包 manifest (可能还有更改日志)。这相当于"),n("code",[e._v("git add -- packages/*/package.json")]),e._v("，但是精确地定制了变化。")]),e._v(" "),n("p",[e._v("如果您"),n("strong",[e._v("确定")]),e._v("需要不同的行为，您就会理解：通过"),n("code",[e._v("——no-granular-pathspec")]),e._v("来使 git 命令执行"),n("code",[e._v("git add -- .")]),e._v("。通过设置"),n("a",{attrs:{href:"https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec",target:"_blank",rel:"noopener noreferrer"}},[e._v("pathspec"),n("OutboundLink")],1),e._v("，"),n("strong",[e._v("您必须将所有秘密和构建输出适当地忽略掉，否则它们会被提交并推到仓库的。")])]),e._v(" "),n("p",[e._v("通过"),n("code",[e._v("lerna.json")]),e._v("设置：")]),e._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"independent"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"granularPathspec"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("p",[e._v("采用根级配置是有意为之，因为它还包括了"),n("code",[e._v("lerna publish")]),e._v("中的"),n("a",{attrs:{href:"https://github.com/lerna/lerna/tree/master/commands/publish#--no-granular-pathspec",target:"_blank",rel:"noopener noreferrer"}},[e._v("同名配置项"),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("h3",{attrs:{id:"no-private"}},[n("code",[e._v("--no-private")])]),e._v(" "),n("p",[e._v("默认情况下，"),n("code",[e._v("lerna version")]),e._v("将在选择版本、提交和标记发布时包含私有包。我们可以通过"),n("code",[e._v("--no-private")]),e._v("来禁用该行为。")]),e._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("注意")]),e._v(" "),n("p",[e._v("该配置项并未将"),n("a",{attrs:{href:"https://docs.npmjs.com/about-private-packages",target:"_blank",rel:"noopener noreferrer"}},[e._v("私有作用域的包"),n("OutboundLink")],1),e._v("排除在外，只会排除 package.json 文件中"),n("code",[e._v("private")]),n("a",{attrs:{href:"https://docs.npmjs.com/configuring-npm/package-json.html#private",target:"_blank",rel:"noopener noreferrer"}},[e._v("字段"),n("OutboundLink")],1),e._v("设置为"),n("code",[e._v("true")]),e._v("的包。")])]),e._v(" "),n("h3",{attrs:{id:"no-push"}},[n("code",[e._v("--no-push")])]),e._v(" "),n("p",[e._v("默认情况下，"),n("code",[e._v("lerna version")]),e._v("将提交和标记的更改推到已配置的 "),n("a",{attrs:{href:"https://github.com/lerna/lerna/tree/master/commands/version#--git-remote-name",target:"_blank",rel:"noopener noreferrer"}},[e._v("git 远程服务器"),n("OutboundLink")],1),e._v("。设置"),n("code",[e._v("--no-push")]),e._v("来禁用此行为。")]),e._v(" "),n("h3",{attrs:{id:"preid"}},[n("code",[e._v("--preid")])]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[e._v("lerna version prerelease\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 使用下一个语义化预发布版本，如：")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 1.0.0 => 1.0.1-alpha.0")]),e._v("\n\nlerna version prepatch --preid next\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 通过制定的预发布标识符以使用下一个语义化预发布版本，如")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 1.0.0 => 1.0.1-next.0")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br")])]),n("p",[e._v("使用该参数时，"),n("code",[e._v("lerna version")]),e._v("将使用"),n("a",{attrs:{href:"http://semver.org/#spec-item-9",target:"_blank",rel:"noopener noreferrer"}},[e._v("指定的 prerelease 标识符"),n("OutboundLink")],1),e._v("递增"),n("code",[e._v("premajor")]),e._v("、"),n("code",[e._v("preminor")]),e._v("、"),n("code",[e._v("prepatch")]),e._v("或"),n("code",[e._v("prerelease")]),e._v(" 语义化版本号。")]),e._v(" "),n("h3",{attrs:{id:"sign-git-commit"}},[n("code",[e._v("--sign-git-commit")])]),e._v(" "),n("p",[e._v("该配置项和"),n("code",[e._v("npm version")]),e._v("的同名"),n("a",{attrs:{href:"https://docs.npmjs.com/misc/config#sign-git-commit",target:"_blank",rel:"noopener noreferrer"}},[e._v("配置项"),n("OutboundLink")],1),e._v("相类似。")]),e._v(" "),n("h3",{attrs:{id:"sign-git-tag"}},[n("code",[e._v("--sign-git-tag")])]),e._v(" "),n("p",[e._v("该配置项和"),n("code",[e._v("npm version")]),e._v("的同名"),n("a",{attrs:{href:"https://docs.npmjs.com/misc/config#sign-git-tag",target:"_blank",rel:"noopener noreferrer"}},[e._v("配置项"),n("OutboundLink")],1),e._v("相类似。")]),e._v(" "),n("h3",{attrs:{id:"force-git-tag"}},[n("code",[e._v("--force-git-tag")])]),e._v(" "),n("p",[e._v("该配置项将替换任意的现有标签，而非失败信息。")]),e._v(" "),n("h3",{attrs:{id:"tag-version-prefix"}},[n("code",[e._v("--tag-version-prefix")])]),e._v(" "),n("p",[e._v("该配置项允许设置自定义前缀，默认的前缀是:"),n("code",[e._v("v")]),e._v("。")]),e._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("请记住")]),e._v(" "),n("p",[e._v("目前您必须设置两次：分别对应"),n("code",[e._v("version")]),e._v("命令和"),n("code",[e._v("publish")]),e._v("命令。")])]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 本地")]),e._v("\nlerna version --tag-version-prefix"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("''")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 在 CI 上")]),e._v("\nlerna publish from-git --tag-version-prefix"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("''")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("h3",{attrs:{id:"yes"}},[n("code",[e._v("--yes")])]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[e._v("lerna version --yes\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 跳过 `Are you sure you want to publish these packages?`")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("当使用该参数运行时，"),n("code",[e._v("lerna version")]),e._v("将将跳过所有确认提示。在"),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Continuous_integration",target:"_blank",rel:"noopener noreferrer"}},[e._v("持续集成(CI)"),n("OutboundLink")],1),e._v("中用于自动回答发布确认提示。")]),e._v(" "),n("h2",{attrs:{id:"已废弃配置项"}},[e._v("已废弃配置项")]),e._v(" "),n("blockquote",[n("p",[e._v("既然是已废弃的，内容就不翻译了。")])]),e._v(" "),n("h3",{attrs:{id:"cd-version"}},[n("code",[e._v("--cd-version")])]),e._v(" "),n("h3",{attrs:{id:"repo-version"}},[n("code",[e._v("--repo-version")])]),e._v(" "),n("h3",{attrs:{id:"skip-git"}},[n("code",[e._v("--skip-git")])]),e._v(" "),n("h2",{attrs:{id:"提示"}},[e._v("提示")]),e._v(" "),n("h3",{attrs:{id:"生成初始的更新日志"}},[e._v("生成初始的更新日志")]),e._v(" "),n("p",[e._v("如果您在 monorepo 启动一段时间后才开始使用"),n("code",[e._v("--conventional-commits")]),e._v("配置项，您仍然可以使用"),n("a",{attrs:{href:"https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli#readme",target:"_blank",rel:"noopener noreferrer"}},[e._v("conventional-changelog-cli"),n("OutboundLink")],1),e._v("和"),n("a",{attrs:{href:"https://github.com/lerna/lerna/tree/master/commands/exec#readme",target:"_blank",rel:"noopener noreferrer"}},[e._v("lerna exec"),n("OutboundLink")],1),e._v("为以前的版本生成更改日志。")]),e._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Lerna does not actually use conventional-changelog-cli, so you need to install it temporarily")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" i -D conventional-changelog-cli\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Documentation: `npx conventional-changelog --help`")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# fixed versioning (default)")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# run in root, then leaves")]),e._v("\nnpx conventional-changelog --preset angular --release-count "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" --outfile ./CHANGELOG.md --verbose\nnpx lerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exec")]),e._v(" --concurrency "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" --stream -- "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'conventional-changelog --preset angular --release-count 0 --commit-path "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PWD")]),e._v(" --pkg "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PWD")]),e._v("/package.json --outfile "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PWD")]),e._v("/CHANGELOG.md --verbose'")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# independent versioning")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# (no root changelog)")]),e._v("\nnpx lerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exec")]),e._v(" --concurrency "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" --stream -- "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'conventional-changelog --preset angular --release-count 0 --commit-path "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PWD")]),e._v(" --pkg "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PWD")]),e._v("/package.json --outfile "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PWD")]),e._v("/CHANGELOG.md --verbose --lerna-package "),n("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$LERNA_PACKAGE_NAME")]),e._v("'")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br")])]),n("p",[e._v("如果您使用"),n("code",[e._v("--changelog-preset")]),e._v("进行自定义，那么您应该相应地更改上面的示例中的"),n("code",[e._v("--preset")]),e._v("值。")]),e._v(" "),n("h2",{attrs:{id:"生命周期"}},[e._v("生命周期")]),e._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// preversion:  在设置版本号之前运行.")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// version:     在设置版本号之后，提交之前运行.")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// postversion: 在设置版本号之后，提交之后运行.")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("lerna 将在"),n("code",[e._v("lerna version")]),e._v("期间运行"),n("a",{attrs:{href:"https://docs.npmjs.com/misc/scripts#description",target:"_blank",rel:"noopener noreferrer"}},[e._v("npm 生命周期脚本"),n("OutboundLink")],1),e._v("：")]),e._v(" "),n("ol",[n("li",[e._v("侦测更改的包，选择版本号进行覆盖。")]),e._v(" "),n("li",[e._v("在根目录运行"),n("code",[e._v("preversion")]),e._v("。")]),e._v(" "),n("li",[e._v("对于每个更改的包，按照拓扑顺序(所有依赖项在依赖关系之前):"),n("br"),e._v("\ni. 运行"),n("code",[e._v("preversion")]),e._v("生命周期。"),n("br"),e._v("\nii. 更新 package.json 中的版本。"),n("br"),e._v("\niii. 运行"),n("code",[e._v("version")]),e._v("生命周期。")]),e._v(" "),n("li",[e._v("在根目录运行"),n("code",[e._v("version")]),e._v("生命周期。")]),e._v(" "),n("li",[e._v("如果"),n("a",{attrs:{href:"https://github.com/lerna/lerna/tree/master/commands/version#--no-git-tag-version",target:"_blank",rel:"noopener noreferrer"}},[e._v("可用"),n("OutboundLink")],1),e._v("，将更改文件添加到索引。")]),e._v(" "),n("li",[e._v("如果"),n("a",{attrs:{href:"https://github.com/lerna/lerna/tree/master/commands/version#--no-git-tag-version",target:"_blank",rel:"noopener noreferrer"}},[e._v("可用"),n("OutboundLink")],1),e._v("创建提交和标记。")]),e._v(" "),n("li",[e._v("对于每个改变包，按照词法顺序(根据目录结构的字母顺序):"),n("br"),e._v("\ni. 运行"),n("code",[e._v("postversion")]),e._v("生命周期。")]),e._v(" "),n("li",[e._v("在根目录运行"),n("code",[e._v("postversion")]),e._v("。")]),e._v(" "),n("li",[e._v("如果"),n("a",{attrs:{href:"https://github.com/lerna/lerna/tree/master/commands/version#--no-push",target:"_blank",rel:"noopener noreferrer"}},[e._v("可用"),n("OutboundLink")],1),e._v("推动提交和标记到远程服务器。")]),e._v(" "),n("li",[e._v("如果"),n("a",{attrs:{href:"https://github.com/lerna/lerna/tree/master/commands/version#--create-release-type",target:"_blank",rel:"noopener noreferrer"}},[e._v("可用"),n("OutboundLink")],1),e._v("创建发布。")])])])}),[],!1,null,null,null);s.default=t.exports}}]);